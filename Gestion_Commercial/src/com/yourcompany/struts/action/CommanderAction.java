/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yourcompany.struts.action;

import java.sql.Timestamp;

 import  javax.naming.InitialContext;
 import javax.naming.NamingException;
import java.util.Date;
import java.util.Properties;

import service.*;
import serviceWS.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;

import service.serviceRemote;
import serviceWS.LunettesServiceClient;
import serviceWS.LunettesServicePortType;

import DAO.Commandes;
import DAO.CommandesDAO;

import com.yourcompany.struts.form.CommanderForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-24-2015
 * 
 * XDoclet definition:
 * @struts.action path="/commander" name="commanderForm" input="/commander.jsp" validate="true"
 */
public class CommanderAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CommanderForm commanderForm = (CommanderForm) form;// TODO Auto-generated method stub
		
		
		// en récupère les entrées du formulaire		
		
		int codeCmd = commanderForm.getCodeCmd();
		String nomC = commanderForm.getNomC();
		int qteCmd = commanderForm.getQteCmd();
		
		
		// on récupère les donées enregistrer dans la Session
		
		HttpSession sess = request.getSession();
		int codeL = Integer.parseInt(sess.getAttribute("codeL").toString());
		int prix = Integer.parseInt(sess.getAttribute("prixL").toString())*qteCmd;
		
		
		//// on récupère l'accèe l'ejb
		
		InitialContext ctx;
        
		Properties props = new Properties();
        props.setProperty("java.naming.factory.initial", "com.sun.enterprise.naming.SerialInitContextFactory");
        props.setProperty("java.naming.factory.url.pkgs", "com.sun.enterprise.naming");
        props.setProperty("java.naming.factory.state", "com.sun.corba.ee.impl.presentation.rmi.JNDIStateFactoryImpl");
        props.setProperty("org.omg.CORBA.ORBInitialHost", "localhost");		        
        props.setProperty("org.omg.CORBA.ORBInitialPort", "3700");
		
        try {
			ctx = new InitialContext(props);
			serviceRemote bean = (serviceRemote) ctx.lookup("ejb/service");
			
			// on mise à jour la quantité dans 
			// la table lunettesMagasin à l'aide de l'EJB
			
			boolean t=bean.updateMag(codeL, qteCmd);
		
			
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		//////////////////////////////////////////////////////////////////////:
		
		
		// envoie des données dans la request pour les récupérer 
		// l'or de la création de la facture PDF
		request.setAttribute("codeCmd", codeCmd);
		request.setAttribute("nomC", nomC);
		request.setAttribute("qteCmd", qteCmd);
		request.setAttribute("prixL", prix);
		
		
		/// on récupére l'accèe au web service
		
		LunettesServiceClient client = new LunettesServiceClient();  
		LunettesServicePortType service = client.getLunettesServiceHttpPort(); 
		
		// en enregistre la commande dans la table TousCommande 		
		String result = service.saveCMD1(codeCmd, nomC, codeL, qteCmd);
		
		
		// en enregistre la commande dans la table commande du gestionCommercial
		
		CommandesDAO dao = new CommandesDAO();		
		Session ss = dao.getSession();		
		Transaction tr2 = ss.beginTransaction();		
		Commandes cmd =new Commandes();
		
		cmd.setClient(nomC);
		cmd.setCodeCmd(codeCmd);
		cmd.setCodeL(codeL);
		cmd.setDateCmd(new Timestamp( new Date().getTime()));
		cmd.setQteCmd(qteCmd);
		ss.save(cmd);		
		tr2.commit();
		
		ss.close();
		//on fait la redirection vers la page de facture.jsp	
		return mapping.findForward("success");
	}
}